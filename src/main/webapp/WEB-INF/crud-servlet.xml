<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-4.2.xsd"
>
    <sec:global-method-security pre-post-annotations="enabled"/>

    <context:component-scan base-package="com.example" />
    <mvc:annotation-driven/>
    <bean id="bcrypt" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <mvc:view-controller path="/login"/>
    <mvc:view-controller path="/logout"/>
    <sec:http>
    <sec:intercept-url pattern="/" access="permitAll()"/>
    <sec:intercept-url pattern="/register" access="permitAll()"/>
    <sec:intercept-url pattern="/login" access="isAnonymous()"/>
    <sec:intercept-url pattern="/logout" access="isAuthenticated()"/>

        <sec:intercept-url pattern="/books/formadd" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/books/edit" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/books/delete" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/books/saveBook" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/books/updateBook" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/books/details" access="permitAll()"/>

        <sec:intercept-url pattern="/authors/list" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/authors/formadd" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/authors/formedit" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/authors/updateAuthor" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/authors/saveAuthor" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/authors/deleteAuthor" access="hasAuthority('ROLE_ADMIN')"/>

        <sec:intercept-url pattern="/cart" access="isAuthenticated()"/>
        <sec:intercept-url pattern="/addItemToCart" access="isAuthenticated()"/>
        <sec:intercept-url pattern="/editCartItem" access="isAuthenticated()"/>
        <sec:intercept-url pattern="/deleteCartItem" access="isAuthenticated()"/>

        <sec:intercept-url pattern="/categories" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/categories/list" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/categories/formadd" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/categories/formedit" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/categories/updateCategory" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/categories/saveCategory" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/categories/deleteCategory" access="hasAuthority('ROLE_ADMIN')"/>

        <sec:intercept-url pattern="/editList" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/search" access="permitAll()"/>

        <sec:intercept-url pattern="/order" access="isAuthenticated()"/>
        <sec:intercept-url pattern="/order/makeOrder" access="isAuthenticated()"/>
        <sec:intercept-url pattern="/order/myOrders" access="isAuthenticated()"/>
        <sec:intercept-url pattern="/order/showOrderItems" access="isAuthenticated()"/>
        <sec:intercept-url pattern="/order/showAll" access="hasAuthority('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/order/changeStatus" access="hasAuthority('ROLE_ADMIN')"/>


        <sec:intercept-url pattern="/registerAdmin" access="permitAll()"/>



     <sec:intercept-url pattern="/**" access="hasAuthority('ROLE_ADMIN')"/>
     <sec:form-login login-page="/login"/>
     <sec:logout logout-success-url="/"/>
    </sec:http>

    <sec:authentication-manager>
     <sec:authentication-provider>
     <sec:password-encoder ref="bcrypt"/>
     <sec:jdbc-user-service data-source-ref="myDataSource"/>
     </sec:authentication-provider>
    </sec:authentication-manager>
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/" />
        <property name="suffix" value=".jsp" />
    </bean>


    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="org.postgresql.Driver" />
<!--        <property name="jdbcUrl" value="jdbc:postgresql://tai.db.elephantsql.com:5432/clyzycow" />-->
<!--        <property name="user" value="clyzycow" />-->
<!--        <property name="password" value="m5PMNwPJsoF7XcpCeVvRAIm1YtHPT_1r" />-->
        <property name="jdbcUrl" value="jdbc:postgresql://tyke.db.elephantsql.com/ftvsdtmq" />
        <property name="user" value="ftvsdtmq" />
        <property name="password" value="0pwWGhdjdZ_REv1Y2ZFUrD6dxUFikWPZ" />
        <!-- these are connection pool properties for C3P0 -->
        <property name="minPoolSize" value="1" />
        <property name="maxPoolSize" value="2" />
        <property name="maxIdleTime" value="20000" />
    </bean>
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource" />
        <property name="packagesToScan" value="com.example.demo.entity" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgresPlusDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>
    <bean id="myTransactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <tx:annotation-driven transaction-manager="myTransactionManager" />

    <mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>
</beans>

